CREATE DATABASE GlobalWeatherDB;

USE GlobalWeatherDB;

CREATE TABLE WeatherData (
    id INT AUTO_INCREMENT PRIMARY KEY,
    country VARCHAR(100),
    location_name VARCHAR(100),
    latitude FLOAT,
    longitude FLOAT,
    timezone VARCHAR(100),
    last_updated_epoch BIGINT,
    last_updated DATETIME,
    temperature_celsius FLOAT,
    condition_text VARCHAR(100),
    wind_mph FLOAT,
    wind_kph FLOAT,
    wind_degree INT,
    wind_direction VARCHAR(10),
    pressure_mb FLOAT,
    precip_mm FLOAT,
    humidity INT,
    cloud INT,
    feels_like_celsius FLOAT,
    visibility_km FLOAT,
    uv_index FLOAT,
    gust_mph FLOAT,
    gust_kph FLOAT,
    air_quality_carbon_monoxide FLOAT,
    air_quality_ozone FLOAT,
    air_quality_nitrogen_dioxide FLOAT,
    air_quality_sulphur_dioxide FLOAT,
    air_quality_pm2_5 FLOAT,
    air_quality_pm10 FLOAT,
    air_quality_us_epa_index INT,
    air_quality_gb_defra_index INT,
    sunrise VARCHAR(20),
    sunset VARCHAR(20),
    moonrise VARCHAR(20),
    moonset VARCHAR(20),
    moon_phase VARCHAR(50),
    moon_illumination INT
);


SELECT location_name, country, temperature_celsius
FROM WeatherData
ORDER BY temperature_celsius DESC
LIMIT 5;

SELECT location_name, country, precip_mm
FROM WeatherData
ORDER BY precip_mm ASC
LIMIT 5;

SELECT *
FROM WeatherData
WHERE temperature_celsius > 35 OR precip_mm > 100;

SELECT country, AVG(temperature_celsius) AS average_temperature
FROM WeatherData
GROUP BY country;


SELECT *
FROM WeatherData
WHERE DATE(last_updated) = '2024-05-16';

DROP TABLE IF EXISTS WeatherData;